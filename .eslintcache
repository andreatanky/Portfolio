[{"/Users/andrea/Desktop/Portfolio/src/index.js":"1","/Users/andrea/Desktop/Portfolio/src/reportWebVitals.js":"2","/Users/andrea/Desktop/Portfolio/src/App.js":"3","/Users/andrea/Desktop/Portfolio/src/components/hero/landing.js":"4","/Users/andrea/Desktop/Portfolio/src/components/my-navbar/navbar.js":"5","/Users/andrea/Desktop/Portfolio/src/components/my-navbar/menuItems.js":"6","/Users/andrea/Desktop/Portfolio/src/pages/portfolio/projects.js":"7","/Users/andrea/Desktop/Portfolio/src/pages/portfolio/cardItem.js":"8","/Users/andrea/Desktop/Portfolio/src/pages/experience/experience.js":"9","/Users/andrea/Desktop/Portfolio/src/pages/portfolio/projectItems.js":"10","/Users/andrea/Desktop/Portfolio/src/pages/skills/skills.js":"11","/Users/andrea/Desktop/Portfolio/src/pages/about/about.js":"12","/Users/andrea/Desktop/Portfolio/src/pages/contact/contact.js":"13"},{"size":541,"mtime":1609864556395,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1609836001297,"results":"16","hashOfConfig":"15"},{"size":896,"mtime":1610212672450,"results":"17","hashOfConfig":"15"},{"size":2132,"mtime":1609998824128,"results":"18","hashOfConfig":"15"},{"size":2229,"mtime":1609931790170,"results":"19","hashOfConfig":"15"},{"size":486,"mtime":1609865362704,"results":"20","hashOfConfig":"15"},{"size":10541,"mtime":1610212561494,"results":"21","hashOfConfig":"15"},{"size":2384,"mtime":1609943261801,"results":"22","hashOfConfig":"15"},{"size":272,"mtime":1610207018038,"results":"23","hashOfConfig":"15"},{"size":1578,"mtime":1609945491392,"results":"24","hashOfConfig":"15"},{"size":8100,"mtime":1610213361620,"results":"25","hashOfConfig":"15"},{"size":1984,"mtime":1610216682443,"results":"26","hashOfConfig":"15"},{"size":234,"mtime":1609931631913,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1q46otl",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/andrea/Desktop/Portfolio/src/index.js",[],["59","60"],"/Users/andrea/Desktop/Portfolio/src/reportWebVitals.js",[],"/Users/andrea/Desktop/Portfolio/src/App.js",["61","62"],"/Users/andrea/Desktop/Portfolio/src/components/hero/landing.js",[],"/Users/andrea/Desktop/Portfolio/src/components/my-navbar/navbar.js",["63","64","65"],"import React, { Component, useEffect, useState } from 'react'\nimport './navbar.css';\nimport { MenuItems } from './menuItems';\nimport { HashLink } from 'react-router-hash-link';\n\nfunction Navbar() {\n    const [navbar, setNavbar] = useState(false);\n\n    const chnageBackground = () => {\n        if (window.scrollY >= 60) {\n            setNavbar(true);\n        } else {\n            setNavbar(false);\n        }\n    }\n\n    window.addEventListener('scroll', chnageBackground);\n\n    return (\n        <nav className={navbar ? 'navbar-active' : 'navbar'}>\n             <div className=\"logo\">\n                <h1><HashLink className=\"username\" smooth to=\"#\">andreatanky</HashLink></h1>\n            </div>\n            <ul className='nav-menu'>\n                <li><HashLink className=\"nav-links\" smooth to=\"#portfolio\">Portfolio</HashLink></li>\n                <li><HashLink className=\"nav-links\" smooth to=\"#skills\">Skills</HashLink></li>\n                <li><HashLink className=\"nav-links\" smooth to=\"#experience\">Experience</HashLink></li>\n                <li><HashLink className=\"nav-links\" smooth to=\"#about\">About</HashLink></li>\n                <li><HashLink className=\"nav-links\" smooth to=\"#contact\">Contact</HashLink></li>\n            {/* {MenuItems.map((item, index) => {\n                return (\n                    <li><a className={item.cName} href={item.url}>{item.title}</a></li>\n                )\n            })} */}\n            </ul>\n        </nav>\n    )\n}\n\n// class Navbar extends Component {\n\n//     const [navbar, setNavBar] = useState(false);\n//     render() {\n//         return (\n//             <nav>\n//                 <header className=\"NavbarItems\">\n//                 <div className=\"logo\">\n//                     <h1 href=\"#\">andreatanky</h1>\n//                 </div>\n//                 <ul className='nav-menu'>\n//                     {MenuItems.map((item, index) => {\n//                         return (\n//                             <li><a className={item.cName} href={item.url}>{item.title}</a></li>\n//                         )\n//                     }\n//                     )}\n//                 </ul>\n//                 </header>\n//             </nav>\n//         )\n//     }\n// }\n\nexport default Navbar;","/Users/andrea/Desktop/Portfolio/src/components/my-navbar/menuItems.js",[],"/Users/andrea/Desktop/Portfolio/src/pages/portfolio/projects.js",["66","67","68","69"],"import React, { Component } from 'react'\nimport CardItem from './cardItem';\nimport './projects.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {CardMedia, colors, Container} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { ProjectItems } from './projectItems';\nimport {FaExternalLinkSquareAlt, FaGithub} from 'react-icons/fa';\nimport { FaReadme } from 'react-icons/fa';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        minWidth: 275,\n    },\n    contain: {\n        padding: theme.spacing(5),\n    },\n    grids: {\n        display: 'flex'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    media: {\n        height: 320,\n    }\n}));\n\n// const useStyles = makeStyles({\n//     root: {\n//         minWidth: 275,\n//     },\n//     bullet: {\n//         display: 'inline-block',\n//         margin: '0 2px',\n//         transform: 'scale(0.8)',\n//     },\n//     title: {\n//         fontSize: 14,\n//     },\n//     pos: {\n//         marginBottom: 12,\n//     },\n//     media: {\n//         height: 320,\n//     },\n// });\n\n\n\nfunction Projects() {\n    const classes = useStyles();\n        return (\n            <div id=\"portfolio\">\n                <Container className={classes.contain}>\n                    <div className={classes.root}>\n                        <h1>Projects</h1>\n                        <Grid className=\"classes.grids\" container spacing = {3}>\n                            <Grid item xs={12} sm={6} lg={4}>\n                                {/*insert card here*/}\n\n                                <Card className={classes.root} style={{backgroundColor: \"#ffff\"}} variant=\"outlined\">\n                                    <CardActionArea>\n                                        <CardMedia\n                                            className={classes.media}\n                                            image= {ProjectItems[0].imageUrl}\n                                            title= {ProjectItems[0].title}\n                                        />\n                                        <CardContent>\n                                            <Typography style={{color: \"#ff006e\", fontFamily:'Poppins', fontWeight: 'bold'}} className=\"title\" gutterBottom variant=\"h5\" component=\"h2\">\n                                                {ProjectItems[0].title}\n                                            </Typography>\n                                            <Typography style={{color: \"black\", fontFamily:'Poppins'}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                {ProjectItems[0].description}\n                                            </Typography>\n                                        </CardContent>\n                                    </CardActionArea>\n                                    <CardActions>\n                                        <Button variant=\"contained\" size=\"small\" color=\"secondary\">\n                                            GITHUB<FaGithub style={{paddingLeft: '0.3em'}} />\n                                        </Button>\n                                        <Button color=\"secondary\" variant=\"contained\" size=\"small\">\n                                            DOCUMENTATION <FaReadme style={{paddingLeft: '0.3em'}} />\n                                        </Button>\n                                    </CardActions>\n                                </Card>\n                                {/*card ends here*/}\n                            </Grid>\n                            <Grid item xs={12} sm={6} lg={4}>\n                                {/*insert card here*/}\n\n                                <Card className={classes.root} style={{backgroundColor: \"#ffff\"}} variant=\"outlined\">\n                                    <CardActionArea>\n                                        <CardMedia\n                                            className={classes.media}\n                                            image= {ProjectItems[1].imageUrl}\n                                            title= {ProjectItems[1].title}\n                                        />\n                                        <CardContent>\n                                            <Typography style={{color: \"#ff006e\", fontFamily:'Poppins', fontWeight: 'bold'}} className=\"title\" gutterBottom variant=\"h5\" component=\"h2\">\n                                                {ProjectItems[1].title}\n                                            </Typography>\n                                            <Typography style={{color: \"black\", fontFamily:'Poppins'}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                {ProjectItems[1].description}\n                                            </Typography>\n                                        </CardContent>\n                                    </CardActionArea>\n                                    <CardActions>\n                                        <Button variant=\"contained\" size=\"small\" color=\"secondary\">\n                                            GITHUB<FaGithub style={{paddingLeft: '0.3em'}} />\n                                        </Button>\n                                        <Button variant=\"contained\" size=\"small\" color=\"secondary\">\n                                            DOCUMENTATION <FaReadme style={{paddingLeft: '0.3em'}} />\n                                        </Button>\n                                    </CardActions>\n                                </Card>\n                                {/*card ends here*/}\n                            </Grid>\n                            <Grid item xs={12} sm={6} lg={4}>\n                                {/*insert card here*/}\n\n                                <Card className={classes.root} style={{backgroundColor: \"#ffff\"}} variant=\"outlined\">\n                                    <CardActionArea>\n                                        <CardMedia\n                                            className={classes.media}\n                                            image= {ProjectItems[2].imageUrl}\n                                            title= {ProjectItems[2].title}\n                                        />\n                                        <CardContent>\n                                            <Typography style={{color: \"#ff006e\", fontFamily:'Poppins', fontWeight: 'bold'}} className=\"title\" gutterBottom variant=\"h5\" component=\"h2\">\n                                                {ProjectItems[2].title}\n                                            </Typography>\n                                            <Typography style={{color: \"black\", fontFamily:'Poppins'}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                {ProjectItems[2].description}\n                                            </Typography>\n                                        </CardContent>\n                                    </CardActionArea>\n                                    <CardActions>\n                                        <Button variant=\"contained\" size=\"small\" color=\"secondary\">\n                                            GITHUB<FaGithub style={{paddingLeft: '0.3em'}} />\n                                        </Button>\n                                        <Button variant=\"contained\" size=\"small\" color=\"secondary\">\n                                            DOCUMENTATION <FaReadme style={{paddingLeft: '0.3em'}} />\n                                        </Button>\n                                    </CardActions>\n                                </Card>\n                                {/*card ends here*/}\n                            </Grid>\n                            <Grid item xs={12} sm={6} lg={4}>\n                                {/*insert card here*/}\n\n                                <Card className={classes.root} style={{backgroundColor: \"#ffff\"}} variant=\"outlined\">\n                                    <CardActionArea>\n                                        <CardMedia\n                                            className={classes.media}\n                                            image= {ProjectItems[3].imageUrl}\n                                            title= {ProjectItems[3].title}\n                                        />\n                                        <CardContent>\n                                            <Typography style={{color: \"#ff006e\", fontFamily:'Poppins', fontWeight: 'bold'}} className=\"title\" gutterBottom variant=\"h5\" component=\"h2\">\n                                                {ProjectItems[3].title}\n                                            </Typography>\n                                            <Typography style={{color: \"black\", fontFamily:'Poppins'}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                {ProjectItems[3].description}\n                                            </Typography>\n                                        </CardContent>\n                                    </CardActionArea>\n                                    <CardActions>\n                                        <Button variant=\"contained\" size=\"small\" color=\"secondary\">\n                                            GITHUB<FaGithub style={{paddingLeft: '0.3em'}} />\n                                        </Button>\n                                        <Button className={classes.documentation} variant=\"contained\" size=\"small\" color=\"secondary\">\n                                            DEMO<FaExternalLinkSquareAlt style={{paddingLeft: '0.3em'}} />\n                                        </Button>\n                                    </CardActions>\n                                </Card>\n                                {/*card ends here*/}\n                            </Grid>\n                        </Grid>\n                    </div>\n                </Container>\n            </div>\n        )\n}\n\nexport default Projects;","/Users/andrea/Desktop/Portfolio/src/pages/portfolio/cardItem.js",["70","71"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions'\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport unavailable from '../../assets/proj_imgs/image-not-available.png';\nimport { ProjectItems } from './projectItems';\nimport './projects.css';\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    media: {\n        height: 320,\n    },\n});\n\nfunction CardItem() {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n\n    return (\n       ProjectItems.map((item, index) => {\n           return <Card className={classes.root} style={{backgroundColor: \"#ffff\"}} variant=\"outlined\">\n               <CardActionArea>\n                   <CardMedia\n                       className={classes.media}\n                       image= {item.imageUrl}\n                       title= {item.title}\n                   />\n                   <CardContent>\n                       <Typography style={{color: \"#ff006e\", fontFamily:'Poppins', fontWeight: 'bold'}} className=\"title\" gutterBottom variant=\"h5\" component=\"h2\">\n                           {item.title}\n                       </Typography>\n                       <Typography style={{color: \"black\", fontFamily:'Poppins'}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                           {item.description}\n                       </Typography>\n                   </CardContent>\n               </CardActionArea>\n               <CardActions>\n                   <Button variant=\"contained\" size=\"small\" color=\"secondary\">\n                       Github\n                   </Button>\n                   <Button variant=\"contained\" size=\"small\" color=\"secondary\">\n                       Documentation\n                   </Button>\n               </CardActions>\n           </Card>\n       })\n    );\n}\n\nexport default CardItem;","/Users/andrea/Desktop/Portfolio/src/pages/experience/experience.js",[],"/Users/andrea/Desktop/Portfolio/src/pages/portfolio/projectItems.js",["72"],"import ip_poster from '../../assets/proj_imgs/ip.jpeg';\nimport fc_img from '../../assets/proj_imgs/foodieCritic.jpg';\nimport socu_poster from '../../assets/proj_imgs/socu_poster.png';\nimport tp_poster from '../../assets/proj_imgs/tp_poster.png';\nimport socunite from '../../assets/proj_imgs/socunite_p.png';\n\nexport const ProjectItems = [\n    {\n        imageUrl: socunite,\n        title: 'SoCUnite',\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an',\n        githubUrl: '/',\n        documentationUrl: '/'\n    },\n    {\n        imageUrl: ip_poster,\n        title: 'DukeBot',\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when ',\n        githubUrl: '/',\n        documentationUrl: '/'\n    },\n    {\n        imageUrl: tp_poster,\n        title: 'ProductiveNUS',\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an ',\n        githubUrl: '',\n        documentationUrl: '/'\n    },\n    {\n        imageUrl: fc_img,\n        title: 'FoodieCritic',\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an ',\n        githubUrl: '/',\n        documentationUrl: '/'\n    }\n]","/Users/andrea/Desktop/Portfolio/src/pages/skills/skills.js",["73","74"],"/Users/andrea/Desktop/Portfolio/src/pages/about/about.js",["75","76"],"/Users/andrea/Desktop/Portfolio/src/pages/contact/contact.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":12},{"ruleId":"81","severity":1,"message":"85","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":17},{"ruleId":"81","severity":1,"message":"86","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"87","line":1,"column":28,"nodeType":"83","messageId":"84","endLine":1,"endColumn":37},{"ruleId":"81","severity":1,"message":"88","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":19},{"ruleId":"81","severity":1,"message":"86","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"89","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":16},{"ruleId":"81","severity":1,"message":"90","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":13},{"ruleId":"81","severity":1,"message":"91","line":7,"column":20,"nodeType":"83","messageId":"84","endLine":7,"endColumn":26},{"ruleId":"81","severity":1,"message":"92","line":10,"column":8,"nodeType":"83","messageId":"84","endLine":10,"endColumn":19},{"ruleId":"81","severity":1,"message":"93","line":36,"column":11,"nodeType":"83","messageId":"84","endLine":36,"endColumn":15},{"ruleId":"81","severity":1,"message":"94","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":19},{"ruleId":"81","severity":1,"message":"95","line":6,"column":17,"nodeType":"83","messageId":"84","endLine":6,"endColumn":26},{"ruleId":"81","severity":1,"message":"96","line":39,"column":7,"nodeType":"83","messageId":"84","endLine":39,"endColumn":26},{"ruleId":"81","severity":1,"message":"86","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"97","line":3,"column":28,"nodeType":"83","messageId":"84","endLine":3,"endColumn":38},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Particles' is defined but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","'MenuItems' is defined but never used.","'CardItem' is defined but never used.","'Paper' is defined but never used.","'colors' is defined but never used.","'unavailable' is defined but never used.","'bull' is assigned a value but never used.","'socu_poster' is defined but never used.","'Container' is defined but never used.","'WhiteTextTypography' is assigned a value but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation"]